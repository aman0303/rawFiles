apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: ##email##
    privateKeySecretRef:
      name: letsencrypt
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-mdsservice  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-mdsservice
  template:
    metadata:
      labels:
        app: aks-mdsservice
    spec:
      volumes:
        - name: mds-appsettings-volume
          configMap:
            name: mds-appsettings
        - name: mds-jobsettings-volume
          configMap:
            name: mds-jobsettings
      containers:
        - name: aks-mdsservice
          image: ##imagename##
          ports:
            - containerPort: 80
          volumeMounts:
            - name: mds-appsettings-volume
              mountPath: /app/appsettings.prod.json
              subPath: appsettings.prod.json
          imagePullPolicy: Always
        - name: mdsworkerservice
          image: ##workerimagename##
          volumeMounts:
            - name: mds-appsettings-volume
              mountPath: /app/appsettings.prod.json
              subPath: appsettings.prod.json
          imagePullPolicy: Always
      nodeSelector:
        agentpool: apppool
---
apiVersion: v1
kind: Service
metadata:
  name: aks-mdsservice  
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: aks-mdsservice
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appinsights-k8s-property-reader
rules:
- apiGroups: ["", "apps"]
  resources: ["pods", "nodes", "replicasets", "deployments"]
  verbs: ["get", "list"]
---
# actual binding to the role
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appinsights-k8s-property-reader-binding
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: appinsights-k8s-property-reader
  apiGroup: rbac.authorization.k8s.io
